name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Install external dependencies
      run: |
        sudo apt-get update -y \
        && sudo apt-get install -y cmake pkg-config gcc libssh2-1-dev libssl-dev

    - name: set up git2go for static mode
      run: |
        go get -d github.com/libgit2/git2go/v31
        cd $GOPATH/src/github.com/libgit2/git2go
        git checkout release-1.1
        git submodule update --init # get libgit2
        make install-static

    - name: get dependencies
      run: |
        go get -v -t -d ./...

    - name: test
      run: bin/test

    - name: build linux amd64
      run: bin/build
      env:
        GOOS: linux
        GOARCH: amd64
        BUILD_TAGS: static

    - name: build windows amd64
      run: bin/build
      env:
        GOOS: windows
        GOARCH: amd64
        BUILD_TAGS: static

    - name: build darwin amd64
      run: bin/build
      env:
        GOOS: darwin
        GOARCH: amd64
        BUILD_TAGS: static

    - name: package software for linux amd64
      run: bin/package
      env:
        GOOS: linux
        GOARCH: amd64
      if: startsWith(github.ref, 'refs/tags/')

    - name: package software for windows amd64
      run: bin/package
      env:
        GOOS: windows
        GOARCH: amd64
      if: startsWith(github.ref, 'refs/tags/')

    - name: package software for darwin amd64
      run: bin/package
      env:
        GOOS: darwin
        GOARCH: amd64
      if: startsWith(github.ref, 'refs/tags/')

    - name: create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      if: startsWith(github.ref, 'refs/tags/')

    - name: Upload release asset for linux amd64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/linux/amd64/letter-generator-linux_amd64.tar.gz
        asset_name: letter-generator-linux_amd64.tar.gz
        asset_content_type: application/gzip
      if: startsWith(github.ref, 'refs/tags/')

    - name: Upload release asset for windows amd64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: windows
        GOARCH: amd64
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/windows/amd64/letter-generator-windows_amd64.tar.gz
        asset_name: letter-generator-windows_amd64.tar.gz
        asset_content_type: application/gzip
      if: startsWith(github.ref, 'refs/tags/')

    - name: Upload release asset for darwin amd64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GOOS: darwin
        GOARCH: amd64
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/darwin/amd64/letter-generator-darwin_amd64.tar.gz
        asset_name: letter-generator-darwin_amd64.tar.gz
        asset_content_type: application/gzip
      if: startsWith(github.ref, 'refs/tags/')
